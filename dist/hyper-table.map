{"version":3,"sources":["../node_modules/events/events.js","../node_modules/hyperhtml/esm/shared/constants.js","../node_modules/hyperhtml/esm/shared/poorlyfills.js","../node_modules/hyperhtml/esm/classes/Component.js","../node_modules/hyperhtml/esm/objects/Intent.js","../node_modules/hyperhtml/esm/shared/easy-dom.js","../node_modules/hyperhtml/esm/shared/re.js","../node_modules/hyperhtml/esm/shared/features-detection.js","../node_modules/hyperhtml/esm/shared/utils.js","../node_modules/hyperhtml/esm/classes/Wire.js","../node_modules/hyperhtml/esm/objects/Path.js","../node_modules/hyperhtml/esm/objects/Style.js","../node_modules/hyperhtml/esm/3rd/utils.js","../node_modules/hyperhtml/esm/3rd/domdiff.js","../node_modules/hyperhtml/esm/objects/Updates.js","../node_modules/hyperhtml/esm/hyper/render.js","../node_modules/hyperhtml/esm/hyper/wire.js","../node_modules/hyperhtml/esm/index.js","events.js","../flow-typed/core.def.js","default.config.js","table/render.js","table/page.js","table/update.js","table/index.js","core.js"],"names":["EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","type","er","handler","len","args","i","listeners","error","length","arguments","Error","err","context","call","Array","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","G","document","defaultView","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","VOID_ELEMENTS","OWNER_SVG_ELEMENT","SVG_NAMESPACE","CONNECTED","DISCONNECTED","EXPANDO","SHOULD_USE_TEXT_CONTENT","UID","Math","random","Date","UIDC","Event","o_O","e","createEvent","initEvent","Map","keys","values","get","obj","indexOf","set","value","ID","WeakMap","Object","defineProperty","configurable","WeakSet","wm","add","has","isArray","toString","arr","trim","replace","Component","setup","content","children","create","relate","Class","info","relation","w","p","defineProperties","for","id","component","createEntry","sm","handleEvent","ct","currentTarget","getAttribute","html","lazyGetter","svg","state","defaultState","dispatch","detail","_wire$","event","CustomEvent","bubbles","cancelable","dispatchEvent","childNodes","setState","render","target","source","fn","secret","setValue","self","attributes","intents","hasOwnProperty","define","intent","callback","invoke","object","node","doc","createElement","ownerDocument","fragment","createDocumentFragment","text","createTextNode","spaces","almostEverything","attrName","tagName","attrPartials","attrSeeker","RegExp","selfClosing","testFragment","hasAppend","hasContent","appendChild","hasDoomedCloneNode","cloneNode","hasImportNode","append","findAttributes","comments","$0","$1","$2","$3","replaceAttributes","createFragment","SVGFragment","HTMLFragment","clone","getChildren","nodeType","importNode","unique","template","TL","t","propertyIsEnumerable","isFrozen","raw","test","navigator","userAgent","parseFloat","T","k","join","TemplateMap","freeze","container","innerHTML","selector","querySelectorAll","createElementNS","firstChild","Wire","first","last","insert","df","remove","parentNode","removeChild","range","createRange","setStartBefore","setEndAfter","deleteContents","createPath","path","prepend","ownerElement","parent","unshift","name","find","IS_NON_DIMENSIONAL","original","isSVG","style","update","setAttributeNode","oldType","oldValue","newValue","cssText","styleValue","setProperty","toStyle","hyphen","ized","toLowerCase","css","start","end","before","insertBefore","eqeq","a","b","identity","O","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","nextSibling","DELETION","INSERTION","SKIP","SKIP_OND","Rel","v","HS","futureStart","futureChanges","currentChanges","minLen","link","tresh","keymap","idxInOld","findK","newi","oldi","prev","diff","ptr","OND","rows","cols","d","r","c","pv","cv","pd","outer","diffIdx","applyDiff","currentLength","live","currentIndex","ktr","j","lo","hi","mid","smartDiff","domdiff","options","currentSame","futureSame","components","Cache","asHTML","asNode","item","constructor","canDiff","root","paths","updates","Path","setAnyContent","setAttribute","setTextContent","textContent","parts","child","shift","nodeName","cache","array","attribute","realName","removeAttribute","removeAttributeNode","script","replaceChild","invokeAtDistance","placeholder","Promise","resolve","then","String","any","Intent","isPromise_ish","diffOptions","fastPath","anyContent","concat","all","notObserving","observe","removeEventListener","addEventListener","owner","dispatchAll","nodes","dispatchTarget","MutationObserver","records","record","removedNodes","addedNodes","subtree","childList","bewitched","templates","wicked","upgrade","createTemplate","Updates","SC_RE","SC_PLACE","wire","wires","weakly","statics","bind","wireContent","wireNodes","hyper","HTML","EventsEnum","Init","Render","Update","DefaultConfig","showPagination","showPaginationTop","showPaginationBottom","showPageSizeOptions","defaultPageSize","pageSize","showPageJump","columns","map","column","index","assign","data","vector","units","accessor","forEach","unit","sort","events","EventEnum","RENDER","hyperHTML","Header","opts","reject","page","previousPage","nextPage","msg","config","ceil","availablePages","UPDATE","Table","props","Config","INIT","setPage","SetPage"],"mappings":"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","file":"hyper-table.map","sourceRoot":"../src","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// HTML related constants\nexport const VOID_ELEMENTS = /^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$/i;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\n/* istanbul ignore next */\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nlet ID = 0;\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  const key = UID + ID++;\n  return {\n    get(obj) { return obj[key]; },\n    set(obj, value) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n","import { Map, WeakMap } from '../shared/poorlyfills.js';\n\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\n// Components can be created imperatively or declaratively.\n// The main difference is that declared components\n// will not automatically render on setState(...)\n// to simplify state handling on render.\nexport default function Component() {\n  return this; // this is needed in Edge !!!\n}\n\n// Component is lazily setup because it needs\n// wire mechanism as lazy content\nexport function setup(content) {\n  // there are various weakly referenced variables in here\n  // and mostly are to use Component.for(...) static method.\n  const children = new WeakMap;\n  const create = Object.create;\n  const createEntry = (wm, id, component) => {\n    wm.set(id, component);\n    return component;\n  };\n  const get = (Class, info, context, id) => {\n    const relation = info.get(Class) || relate(Class, info);\n    switch (typeof id) {\n      case 'object':\n      case 'function':\n        const wm = relation.w || (relation.w = new WeakMap);\n        return wm.get(id) || createEntry(wm, id, new Class(context));\n      default:\n        const sm = relation.p || (relation.p = create(null));\n        return sm[id] || (sm[id] = new Class(context));\n    }\n  };\n  const relate = (Class, info) => {\n    const relation = {w: null, p: null};\n    info.set(Class, relation);\n    return relation;\n  };\n  const set = context => {\n    const info = new Map;\n    children.set(context, info);\n    return info;\n  };\n  // The Component Class\n  Object.defineProperties(\n    Component,\n    {\n      // Component.for(context[, id]) is a convenient way\n      // to automatically relate data/context to children components\n      // If not created yet, the new Component(context) is weakly stored\n      // and after that same instance would always be returned.\n      for: {\n        configurable: true,\n        value(context, id) {\n          return get(\n            this,\n            children.get(context) || set(context),\n            context,\n            id == null ?\n              'default' : id\n          );\n        }\n      }\n    }\n  );\n  Object.defineProperties(\n    Component.prototype,\n    {\n      // all events are handled with the component as context\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      // components will lazily define html or svg properties\n      // as soon as these are invoked within the .render() method\n      // Such render() method is not provided by the base class\n      // but it must be available through the Component extend.\n      // Declared components could implement a\n      // render(props) method too and use props as needed.\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      // the state is a very basic/simple mechanism inspired by Preact\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      // it is possible to define a default state that'd be always an object otherwise\n      defaultState: {get() { return {}; }},\n      // dispatch a bubbling, cancelable, custom event\n      // through the first known/available node\n      dispatch: {value(type, detail) {\n        const {_wire$} = this;\n        if (_wire$) {\n          const event = new CustomEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            detail\n          });\n          event.component = this;\n          return (_wire$.dispatchEvent ?\n                    _wire$ :\n                    _wire$.childNodes[0]\n                  ).dispatchEvent(event);\n        }\n        return false;\n      }},\n      // setting some property state through a new object\n      // or a callback, triggers also automatically a render\n      // unless explicitly specified to not do so (render === false)\n      setState: {value(state, render) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        if (render !== false)\n          this.render();\n        return this;\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || setValue(this, secret, fn.call(this, type));\n    },\n    set(value) {\n      setValue(this, secret, value);\n    }\n  };\n};\n\n// shortcut to set value on get or set(value)\nconst setValue = (self, secret, value) =>\n  Object.defineProperty(self, secret, {\n    configurable: true,\n    value: typeof value === 'function' ?\n      function () {\n        return (self._wire$ = value.apply(this, arguments));\n      } :\n      value\n  })[secret]\n;\n","const attributes = {};\nconst intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // used to invoke right away hyper:attributes\n  attributes,\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (intent.indexOf('-') < 0) {\n      if (!(intent in intents)) {\n        length = keys.push(intent);\n      }\n      intents[intent] = callback;\n    } else {\n      attributes[intent] = callback;\n    }\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n","// TODO:  I'd love to code-cover RegExp too here\n//        these are fundamental for this library\n\nconst spaces = ' \\\\f\\\\n\\\\r\\\\t';\nconst almostEverything = '[^ ' + spaces + '\\\\/>\"\\'=]+';\nconst attrName = '[ ' + spaces + ']+' + almostEverything;\nconst tagName = '<([A-Za-z]+[A-Za-z0-9:_-]*)((?:';\nconst attrPartials = '(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything + '))?)';\n\nconst attrSeeker = new RegExp(\n  tagName + attrName + attrPartials + '+)([ ' + spaces + ']*/?>)',\n  'g'\n);\n\nconst selfClosing = new RegExp(\n  tagName + attrName + attrPartials + '*)([ ' + spaces + ']*/>)',\n  'g'\n);\n\nexport {attrName, attrSeeker, selfClosing};\n","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n","import {attrName, attrSeeker} from './re.js';\n\nimport {\n  G,\n  ELEMENT_NODE,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\nimport {Map, WeakMap} from './poorlyfills.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(attrSeeker, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// IE and Edge do not support children in SVG nodes\n/* istanbul ignore next */\nexport const getChildren = node => {\n  const children = [];\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    if (childNodes[i].nodeType === ELEMENT_NODE)\n      children.push(childNodes[i]);\n  }\n  return children;\n};\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// https://codepen.io/WebReflection/pen/dqZrpV?editors=0010\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = t => {\n  if (\n    // TypeScript template literals are not standard\n    t.propertyIsEnumerable('raw') ||\n    !Object.isFrozen(t.raw) ||\n    (\n        // Firefox < 55 has not standard implementation neither\n        /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n          parseFloat(RegExp.$1) < 55\n        )\n  ) {\n    const T = {};\n    TL = t => {\n      const k = '^' + t.join('^');\n      return T[k] || (T[k] = t);\n    };\n  } else {\n    // make TL an identity like function\n    TL = t => t;\n  }\n  return TL(t);\n};\n\n// used to store templates objects\n// since neither Map nor WeakMap are safe\nexport const TemplateMap = () => {\n  try {\n    const wm = new WeakMap;\n    const o_O = Object.freeze([]);\n    wm.set(o_O, true);\n    if (!wm.get(o_O))\n      throw o_O;\n    return wm;\n  } catch(o_O) {\n    // inevitable legacy code leaks due\n    // https://github.com/tc39/ecma262/pull/890\n    return new Map;\n  }\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG)\n              style.value = '';\n            else\n              style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            const styleValue = typeof value === 'number' &&\n                                !IS_NON_DIMENSIONAL.test(key) ?\n                                (value + 'px') : value;\n            if (/^--/.test(key))\n              info.setProperty(key, styleValue);\n            else\n              info[key] = styleValue;\n          }\n          oldType = 'object';\n          if (isSVG)\n            style.value = toStyle((oldValue = info));\n          else\n            oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG)\n            style.value = newValue || '';\n          else\n            style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\nexport const append = (get, parent, children, start, end, before) => {\n  if ((end - start) < 2)\n    parent.insertBefore(get(children[start], 1), before);\n  else {\n    const fragment = parent.ownerDocument.createDocumentFragment();\n    while (start < end)\n      fragment.appendChild(get(children[start++], 1));\n    parent.insertBefore(fragment, before);\n  }\n};\n\nexport const eqeq = (a, b) => a == b;\n\nexport const identity = O => O;\n\nexport const indexOf = (\n  moreNodes,\n  moreStart,\n  moreEnd,\n  lessNodes,\n  lessStart,\n  lessEnd,\n  compare\n) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n  if (length < 1)\n    return -1;\n  while ((moreEnd - moreStart) >= length) {\n    let m = moreStart;\n    let l = lessStart;\n    while (\n      m < moreEnd &&\n      l < lessEnd &&\n      compare(moreNodes[m], lessNodes[l])\n    ) {\n      m++;\n      l++;\n    }\n    if (l === lessEnd)\n      return moreStart;\n    moreStart = m + 1;\n  }\n  return -1;\n};\n\nexport const isReversed = (\n  futureNodes,\n  futureEnd,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  compare\n) => {\n  while (\n    currentStart < currentEnd &&\n    compare(\n      currentNodes[currentStart],\n      futureNodes[futureEnd - 1]\n    )) {\n      currentStart++;\n      futureEnd--;\n    };\n  return futureEnd === 0;\n};\n\nexport const next = (get, list, i, length, before) => i < length ?\n              get(list[i], 0) :\n              (0 < i ?\n                get(list[i - 1], -0).nextSibling :\n                before);\n\nexport const remove = (get, parent, children, start, end) => {\n  if ((end - start) < 2)\n    parent.removeChild(get(children[start], -1));\n  else {\n    const range = parent.ownerDocument.createRange();\n    range.setStartBefore(get(children[start], -1));\n    range.setEndAfter(get(children[end - 1], -1));\n    range.deleteContents();\n  }\n};\n\n// - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\n/* istanbul ignore next */\nconst Rel = typeof Map === 'undefined' ?\n  function () {\n    const k = [], v = [];\n    return {\n      has: value => -1 < k.indexOf(value),\n      get: value => v[k.indexOf(value)],\n      set: value => {\n        const i = k.indexOf(value);\n        v[i < 0 ? (k.push(value) - 1) : i] = value;\n      }\n    };\n  } :\n  Map\n;\n\nconst HS = (\n  futureNodes,\n  futureStart,\n  futureEnd,\n  futureChanges,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  currentChanges\n) => {\n\n  let k = 0;\n  /* istanbul ignore next */\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++)\n    tresh[i] = currentEnd;\n\n  const keymap = new Rel;\n  for (let i = currentStart; i < currentEnd; i++)\n    keymap.set(currentNodes[i], i);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const idxInOld = keymap.get(futureNodes[i]);\n    if (idxInOld != null) {\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n  while (ptr) {\n    const {newi, oldi} = ptr;\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n  return diff;\n};\n\n// this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\nconst OND = (\n  futureNodes,\n  futureStart,\n  rows,\n  currentNodes,\n  currentStart,\n  cols,\n  compare\n) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND)\n      return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || (k !== d && pv[pd + k - 1] < pv[pd + k + 1])) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n      r = c - k;\n      while (\n        c < cols &&\n        r < rows &&\n        compare(\n          currentNodes[currentStart + c],\n          futureNodes[futureStart + r]\n        )\n      ) {\n        c++;\n        r++;\n      }\n      if (c === cols && r === rows) {\n        break outer;\n      }\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n  for (d = v.length - 1; d >= 0; d--) {\n    while (\n      c > 0 &&\n      r > 0 &&\n      compare(\n        currentNodes[currentStart + c - 1],\n        futureNodes[futureStart + r - 1]\n      )\n    ) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n    if (!d)\n      break;\n    pd = d - 1;\n    /* istanbul ignore next */\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n    if (k === -d || (k !== d && pv[pd + k - 1] < pv[pd + k + 1])) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n  return diff;\n};\n\nconst applyDiff = (\n  diff,\n  get,\n  parentNode,\n  futureNodes,\n  futureStart,\n  currentNodes,\n  currentStart,\n  currentLength,\n  before\n) => {\n  const live = new Rel;\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.set(futureNodes[futureStart], 1);\n        append(\n          get,\n          parentNode,\n          futureNodes,\n          futureStart++,\n          futureStart,\n          currentIndex < currentLength ?\n            get(currentNodes[currentIndex], 1) :\n            before\n        );\n        break;\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n  i = 0;\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (live.has(currentNodes[currentStart]))\n          currentStart++;\n        else\n          remove(\n            get,\n            parentNode,\n            currentNodes,\n            currentStart++,\n            currentStart\n          );\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n  while (lo < hi) {\n    var mid = ((lo + hi) / 2) >>> 0;\n    if (j < ktr[mid])\n      hi = mid;\n    else\n      lo = mid + 1;\n  }\n  return lo;\n}\n\nexport const smartDiff = (\n  get,\n  parentNode,\n  futureNodes,\n  futureStart,\n  futureEnd,\n  futureChanges,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  currentChanges,\n  currentLength,\n  compare,\n  before\n) => {\n  applyDiff(\n    OND(\n      futureNodes,\n      futureStart,\n      futureChanges,\n      currentNodes,\n      currentStart,\n      currentChanges,\n      compare\n    ) ||\n    HS(\n      futureNodes,\n      futureStart,\n      futureEnd,\n      futureChanges,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      currentChanges\n    ),\n    get,\n    parentNode,\n    futureNodes,\n    futureStart,\n    currentNodes,\n    currentStart,\n    currentLength,\n    before\n  );\n};\n","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\nimport {\n  eqeq, identity, indexOf, isReversed, next,\n  append, remove,\n  smartDiff\n} from './utils.js';\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  options         // optional object with one of the following properties\n                  //  before: domNode\n                  //  compare(generic, generic) => true if same generic\n                  //  node(generic) => Node\n) => {\n  if (!options)\n    options = {};\n\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n\n  let futureEnd = futureNodes.length;\n  let futureStart = 0;\n\n  // common prefix\n  while (\n    currentStart < currentEnd &&\n    futureStart < futureEnd &&\n    compare(currentNodes[currentStart], futureNodes[futureStart])\n  ) {\n    currentStart++;\n    futureStart++;\n  }\n\n  // common suffix\n  while (\n    currentStart < currentEnd &&\n    futureStart < futureEnd &&\n    compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])\n  ) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd;\n\n  // same list\n  if (currentSame && futureSame)\n    return futureNodes;\n\n  // only stuff to add\n  if (currentSame && futureStart < futureEnd) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      next(get, currentNodes, currentStart, currentLength, before)\n    );\n    return futureNodes;\n  }\n\n  // only stuff to remove\n  if (futureSame && currentStart < currentEnd) {\n    remove(\n      get,\n      parentNode,\n      currentNodes,\n      currentStart,\n      currentEnd\n    );\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1;\n\n  // 2 simple indels: the shortest sequence is a subsequence of the longest\n  if (currentChanges < futureChanges) {\n    i = indexOf(\n      futureNodes,\n      futureStart,\n      futureEnd,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      compare\n    );\n    // inner diff\n    if (-1 < i) {\n      append(\n        get,\n        parentNode,\n        futureNodes,\n        futureStart,\n        i,\n        get(currentNodes[currentStart], 0)\n      );\n      append(\n        get,\n        parentNode,\n        futureNodes,\n        i + currentChanges,\n        futureEnd,\n        next(get, currentNodes, currentEnd, currentLength, before)\n      );\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n    i = indexOf(\n      currentNodes,\n      currentStart,\n      currentEnd,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      compare\n    );\n    // outer diff\n    if (-1 < i) {\n      remove(\n        get,\n        parentNode,\n        currentNodes,\n        currentStart,\n        i\n      );\n      remove(\n        get,\n        parentNode,\n        currentNodes,\n        i + futureChanges,\n        currentEnd\n      );\n      return futureNodes;\n    }\n  }\n\n  // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n  /* istanbul ignore else */\n  if ((currentChanges < 2 || futureChanges < 2)) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      get(currentNodes[currentStart], 0)\n    );\n    remove(\n      get,\n      parentNode,\n      currentNodes,\n      currentStart,\n      currentEnd\n    );\n    return futureNodes;\n  }\n\n  // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n  if (\n    currentChanges === futureChanges &&\n    isReversed(\n      futureNodes,\n      futureEnd,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      compare\n    )\n  ) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      next(get, currentNodes, currentEnd, currentLength, before)\n    );\n    return futureNodes;\n  }\n\n  // last resort through a smart diff\n  smartDiff(\n    get,\n    parentNode,\n    futureNodes,\n    futureStart,\n    futureEnd,\n    futureChanges,\n    currentNodes,\n    currentStart,\n    currentEnd,\n    currentChanges,\n    currentLength,\n    compare,\n    before\n  );\n\n  return futureNodes;\n};\n\nexport default domdiff;\n","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../3rd/domdiff.js';\n// see /^script$/i.test(nodeName) bit down here\n// import { create as createElement, text } from '../shared/easy-dom.js';\nimport { text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, getChildren, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        node.textContent = '';\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    // Edge HTML bug #16878726\n    const attribute = remove[i];\n    if (/^id$/i.test(attribute.name))\n      node.removeAttribute(attribute.name);\n    // standard browsers would work just fine here\n    else\n      node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    // this used to be like that\n    // const script = createElement(node, nodeName);\n    // then Edge arrived and decided that scripts created\n    // through template documents aren't worth executing\n    // so it became this ... hopefully it won't hurt in the wild\n    const script = document.createElement(nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  const diffOptions = {node: asNode, before: node};\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            diffOptions\n          );\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            diffOptions\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                diffOptions\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  diffOptions\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            diffOptions\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            diffOptions\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  else if (name in Intent.attributes) {\n    return any => {\n      oldValue = Intent.attributes[name](node, any);\n      node.setAttribute(name, oldValue == null ? '' : oldValue);\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    }\n\n    /* istanbul ignore next */\n    const children = node.children || getChildren(node);\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {G, UIDC, VOID_ELEMENTS} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique,\n  TemplateMap\n} from '../shared/utils.js';\n\nimport {selfClosing} from '../shared/re.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// all unique template literals\nconst templates = TemplateMap();\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const html = template.join(UIDC).replace(SC_RE, SC_PLACE);\n  const fragment = createFragment(this, html);\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\n// some node could be special though, like a custom element\n// with a self closing tag, which should work through these changes.\nconst SC_RE = selfClosing;\nconst SC_PLACE = ($0, $1, $2) => {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n};\n\nexport default render;\n","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './3rd/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        hyper.wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            hyper.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : hyper.wire\n    ).apply(null, arguments);\n}\n","const EventsEnum = {\n  Init: 'INIT',\n  Render: 'RENDER',\n  Update: 'UPDATE',\n  Error: 'ERROR'\n}\n\nexport default {\n  EventsEnum\n}\n","import hyperHTML from 'hyperhtml'\nimport { TableConfig } from './config.def'\n\ndeclare interface TableCore {\n\n  config: TableConfig,\n  columns: Array<string>,\n  data: Array<mixed>,\n  events: EventEmitter,\n  html: hyperHTML.Wire,\n\n  constructor(props: Object): void,\n  render(): void,\n  update(): void,\n  setPage(opts: ?Object): void\n\n}\n","import TableConfig from '../flow-typed/config.def'\n\n//@flow\nconst DefaultConfig: TableConfig = {\n  showPagination: true,\n  showPaginationTop: false,\n  showPaginationBottom: true,\n  showPageSizeOptions: true,\n  defaultPageSize: 20,\n  pageSize: 0,\n  showPageJump: true\n}\n\nexport default {\n  DefaultConfig\n}\n","import { EventEnum } from '../events'\n\nexport default function() {\n  const self = this\n\n  const columns = self.columns.map((column, index) =>\n    Object.assign(column, { index })\n  )\n  const data = self.data.map(vector => {\n    const units = []\n    for (var key in vector) {\n      units.push([\n        vector[key],\n        columns.find(column => column.accessor === key).index\n      ])\n    }\n    return units\n  })\n  data.forEach((unit, index) => {\n    data[index] = unit.sort((a, b) => a[1] > b[1])\n  })\n\n  self.events.emit(EventEnum.RENDER)\n\n  return self.html`\n    <div class=\"ht-wrapper\">\n      <div class=\"ht-pagination\">\n        <ul class=\"ht-pagination-list\">\n          <!-- <li class=\"ht-pagination-item\">\n            <button class=\"ht-pagination-btn\">First</button>\n          </li> -->\n          <li class=\"ht-pagination-item\">\n            <button class=\"ht-pagination-btn\">1</button>\n          </li>\n          <li class=\"ht-pagination-item\">\n            <button class=\"ht-pagination-btn\">2</button>\n          </li>\n          <li class=\"ht-pagination-item\">\n            <button class=\"ht-pagination-btn\">Next</button>\n          </li>\n          <!-- <li class=\"ht-pagination-item\">\n            <button class=\"ht-pagination-btn\">Last</button>\n          </li> -->\n        </ul>\n      </div>\n      <div class=\"ht-container\">\n        <table class=\"ht-table\">\n          <thead>\n            <tr>\n              ${columns.map(\n                column => self.hyperHTML.wire()`<th>${column.Header}</th>`\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            ${data.map(unit => {\n              return self.hyperHTML.wire()`<tr>${unit.map(item => {\n                return self.hyperHTML.wire()`<td>${item[0]}</td>`\n              })}</tr>`\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  `\n}\n","export default function(opts) {\n  const self = this\n\n  return new Promise((resolve, reject) => {\n    if (opts.page)\n      self.page = opts.page\n    else {\n      if (opts.previousPage)\n        self.page -= 1\n      else if (opts.nextPage)\n        self.page += 1\n      else\n        reject({ msg: 'Page options were not provided as expected.' })\n    }\n    if (self.config.showPagination) {\n      const pageSize = self.config.pageSize || self.config.defaultPageSize\n      const numPages = Math.ceil(self.data.length / pageSize)\n      const currentIndex = self.page * pageSize - self.page\n      self.availablePages = []\n      // self.pageData = self.data.splice(, )\n    }\n  })\n}\n","import { EventEnum } from '../events'\n\nexport default function() {\n  const self = this\n\n  self.events.emit(EventEnum.UPDATE)\n  self.render()\n}\n","import Render from './render'\nimport SetPage from './page'\nimport Update from './update'\n\nexport {\n  Render,\n  SetPage,\n  Update,\n}\n","import EventEmitter from 'events'\nimport hyperHTML from 'hyperhtml'\n\nimport { EventsEnum } from './events'\nimport { TableCore } from '../flow-typed/core.def'\nimport { Config } from './default.config'\n\nimport { Render, SetPage, Update } from './table'\n\n//@flow\nclass Table extends hyperHTML.Component implements TableCore {\n  constructor(props: Object) {\n    super()\n\n    // # init scope variables\n    this.config = Object.assign(props.config || {}, Config)\n    this.columns = props.columns || []\n    this.data = props.data || []\n    this.events = new EventEmitter()\n    this.html = hyperHTML.wire(this)\n\n    // # emit init event\n    this.events.emit(EventsEnum.INIT)\n  }\n}\n\n// # define interface methods\nTable.prototype.render = Render\nTable.prototype.setPage = SetPage\nTable.prototype.update = Update\n\n// eslint-disable-next-line\nmodule.exports = Table\n"]}